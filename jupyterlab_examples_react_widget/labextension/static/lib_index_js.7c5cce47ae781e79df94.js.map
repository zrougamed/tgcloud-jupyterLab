{"version":3,"sources":["webpack://@jupyterlab-examples/react-widget/./lib/index.js","webpack://@jupyterlab-examples/react-widget/./lib/widget.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAsD;AACL;AACR;AACzC,WAAW,YAAY;AAC6B;AACpD,+HAA+H;AACxH,qBAAqB,8DAAO;AACnC;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,2DAAS;AACxB;AACA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,kDAAa;AACjD,mCAAmC,gEAAc,EAAE,UAAU;AAC7D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iEAAe,SAAS,EAAC;;;;;;;;;;;;;;;;;;;;;;AC9C0B;AAClB;AACoB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,WAAW,2BAA2B;AACvF;AACA,iDAAiD,WAAW,2BAA2B;AACvF;AACA,iDAAiD,WAAW,mCAAmC;AAC/F;AACA,iDAAiD,WAAW,6CAA6C;AACzG;AACA,iDAAiD,WAAW,4CAA4C;AACxG;AACA,iDAAiD,WAAW,0BAA0B;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAmB;AAC/C,wBAAwB,0DAAmB;AAC3C;AACA,4BAA4B,0DAAmB,SAAS,sBAAsB,gCAAgC,EAAE;AAChH;AA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","file":"lib_index_js.7c5cce47ae781e79df94.js","sourcesContent":["import { MainAreaWidget } from '@jupyterlab/apputils';\nimport { ILauncher } from '@jupyterlab/launcher';\nimport { CounterWidget } from './widget';\n// import { reactIcon } from '@jupyterlab/ui-components';\nimport { LabIcon } from '@jupyterlab/ui-components';\nconst CHAT_ICON = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><image xlink:href=\"data:;base64,\" width=\"52\" height=\"52\" /></svg>';\nexport const chatIcon = new LabIcon({\n    name: 'jitsi:chat',\n    svgstr: CHAT_ICON\n});\n/**\n * The command IDs used by the react-widget plugin.\n */\nvar CommandIDs;\n(function (CommandIDs) {\n    CommandIDs.create = 'create-react-widget';\n})(CommandIDs || (CommandIDs = {}));\n/**\n * Initialization data for the react-widget extension.\n */\nconst extension = {\n    id: 'react-widget',\n    autoStart: true,\n    optional: [ILauncher],\n    activate: (app, launcher) => {\n        const { commands } = app;\n        const command = CommandIDs.create;\n        commands.addCommand(command, {\n            caption: 'tgCloud Cloud platform',\n            label: 'TigerGraph Cloud',\n            icon: args => (args['isPalette'] ? null : chatIcon),\n            execute: () => {\n                const content = new CounterWidget();\n                const widget = new MainAreaWidget({ content });\n                widget.title.label = 'TigerGraph Cloud';\n                widget.title.icon = chatIcon;\n                app.shell.add(widget, 'main');\n            }\n        });\n        if (launcher) {\n            launcher.add({\n                command\n            });\n        }\n    }\n};\nexport default extension;\n","import { ReactWidget } from '@jupyterlab/apputils';\nimport ReactDOM from \"react-dom\";\nimport React, { useReducer, useEffect } from 'react';\nconst LogOut = () => {\n    let key = 'token';\n    localStorage.removeItem(key);\n    const rootElement = document.getElementById(\"root\");\n    console.log(rootElement);\n    return CounterComponent;\n};\nasync function loginFunction() {\n    // let key = 'token';\n    // Get creds\n    const domain = document.getElementById(\"domaintigergraph\");\n    console.log(domain.getAttribute('value'));\n    const username = document.getElementById(\"usernametigergraph\").value;\n    console.log(username);\n    const password = document.getElementById(\"passwordtigergraph\").value;\n    console.log(password);\n    var formdata = new FormData();\n    formdata.append(\"username\", username);\n    formdata.append(\"password\", password);\n    formdata.append(\"host\", domain.getAttribute('value'));\n    const response = await window.fetch('http://127.0.0.1:5000/loginbox', {\n        method: 'POST',\n        body: formdata,\n        redirect: 'follow'\n    }).then(response => response.json())\n        .then(result => {\n        console.log('Success:', result);\n        return result;\n    })\n        .catch(error => {\n        console.error('Error:', error);\n        console.log(\"Error\");\n    });\n    console.log(response);\n    if (response[\"value\"] != null) {\n        // enable algo combo and graphs until login\n        const graphsControler = document.getElementById(\"graphs\");\n        graphsControler.removeAttribute(\"disabled\");\n        graphsControler.innerHTML = '<option value=' + response['value'] + \">\" + response['value'] + \"</option>\";\n        const algControler = document.getElementById(\"algos\");\n        algControler.innerHTML = '<option value=\"AMLSIM\">AML Sim</option>';\n        algControler.removeAttribute(\"disabled\");\n    }\n}\nfunction backtoListing() {\n    const tabAlgos = document.getElementById(\"tab2\");\n    tabAlgos.classList.remove('active');\n    tabAlgos.classList.add('inactive');\n    const tabMachines = document.getElementById(\"tab1\");\n    tabMachines.classList.add('active');\n    tabMachines.classList.remove('inactive');\n}\nfunction loaderAlgo(domain, id) {\n    const tabAlgos = document.getElementById(\"tab2\");\n    tabAlgos.classList.remove('inactive');\n    tabAlgos.classList.add('active');\n    const tabMachines = document.getElementById(\"tab1\");\n    tabMachines.classList.add('inactive');\n    tabMachines.classList.remove('active');\n    console.log(domain);\n    console.log(id);\n    const textDomain = document.getElementById(\"domaintigergraph\");\n    console.log(textDomain);\n    textDomain.setAttribute(\"value\", \"https://\" + domain);\n    // disabe algo combo and graphs until login\n    const graphsControler = document.getElementById(\"graphs\");\n    graphsControler.setAttribute(\"disabled\", \"true\");\n    const algControler = document.getElementById(\"algos\");\n    algControler.setAttribute(\"disabled\", \"true\");\n}\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'setUsername':\n            return Object.assign(Object.assign({}, state), { username: action.payload });\n        case 'setPassword':\n            return Object.assign(Object.assign({}, state), { password: action.payload });\n        case 'setIsButtonDisabled':\n            return Object.assign(Object.assign({}, state), { isButtonDisabled: action.payload });\n        case 'loginSuccess':\n            return Object.assign(Object.assign({}, state), { helperText: action.payload, isError: false });\n        case 'loginFailed':\n            return Object.assign(Object.assign({}, state), { helperText: action.payload, isError: true });\n        case 'setIsError':\n            return Object.assign(Object.assign({}, state), { isError: action.payload });\n    }\n};\nconst initialState = {\n    username: '',\n    password: '',\n    isButtonDisabled: true,\n    helperText: '',\n    isError: false\n};\nconst CloudListingComponent = () => {\n    useEffect(() => {\n        async function anyNameFunction() {\n            console.log(\"Component Loaded ...\");\n            let key = 'token';\n            let token = localStorage.getItem(key);\n            console.log(token);\n            const listMachines = await getlistmachines(token);\n            console.log(listMachines);\n            let rows = listMachines[\"Result\"].map(function (d) {\n                if (d.State == \"terminated\") {\n                    return (React.createElement(\"tr\", null,\n                        React.createElement(\"td\", null,\n                            \" \",\n                            React.createElement(\"img\", { src: d.Logo, style: { width: \"20px\", height: \"20px\" } }),\n                            \" \",\n                            React.createElement(\"input\", { type: \"hidden\", id: \"machineID\", value: d.ID }),\n                            \" \",\n                            React.createElement(\"input\", { type: \"hidden\", id: \"machineDomain\", value: d.Domain })),\n                        React.createElement(\"td\", null, d.Name),\n                        React.createElement(\"td\", null, d.Tag),\n                        React.createElement(\"td\", null,\n                            React.createElement(\"i\", { className: \"fa fa-circle \" + d.State, \"aria-hidden\": \"true\" }, \" \"),\n                            \" \",\n                            d.State,\n                            \" \"),\n                        React.createElement(\"td\", null, d.ExternalInstanceType),\n                        React.createElement(\"td\", null, d.CreatedAt),\n                        React.createElement(\"td\", null, d.UpdatedAt),\n                        React.createElement(\"td\", { className: \"actions\" },\n                            React.createElement(\"i\", { className: \"fa fa-play\", style: { color: \"grey\", padding: \"10px\" }, \"aria-hidden\": \"true\" }),\n                            React.createElement(\"i\", { className: \"fa fa-stop\", style: { color: \"grey\", padding: \"10px\" }, \"aria-hidden\": \"true\" }),\n                            React.createElement(\"i\", { className: \"fa fa-tasks\", style: { color: \"grey\", padding: \"10px\" }, \"aria-hidden\": \"true\" }))));\n                }\n                if (d.State == \"stopped\") {\n                    return (React.createElement(\"tr\", null,\n                        React.createElement(\"td\", null,\n                            \" \",\n                            React.createElement(\"img\", { src: d.Logo, style: { width: \"20px\", height: \"20px\" } }),\n                            \" \",\n                            React.createElement(\"input\", { type: \"hidden\", id: \"machineID\", value: d.ID }),\n                            \" \",\n                            React.createElement(\"input\", { type: \"hidden\", id: \"machineDomain\", value: d.Domain })),\n                        React.createElement(\"td\", null, d.Name),\n                        React.createElement(\"td\", null, d.Tag),\n                        React.createElement(\"td\", null,\n                            React.createElement(\"i\", { className: \"fa fa-circle \" + d.State, \"aria-hidden\": \"true\" }, \" \"),\n                            \" \",\n                            d.State,\n                            \" \"),\n                        React.createElement(\"td\", null, d.ExternalInstanceType),\n                        React.createElement(\"td\", null, d.CreatedAt),\n                        React.createElement(\"td\", null, d.UpdatedAt),\n                        React.createElement(\"td\", { className: \"actions\" },\n                            React.createElement(\"a\", { href: \"#\", onClick: () => opsMachines(\"start\", d.ID) },\n                                React.createElement(\"i\", { className: \"fa fa-play\", style: { padding: \"10px\" }, \"aria-hidden\": \"true\" })),\n                            React.createElement(\"i\", { className: \"fa fa-stop\", style: { color: \"grey\", padding: \"10px\" }, \"aria-hidden\": \"true\" }),\n                            React.createElement(\"i\", { className: \"fa fa-tasks\", style: { color: \"grey\", padding: \"10px\" }, \"aria-hidden\": \"true\" }))));\n                }\n                if (d.State == \"ready\") {\n                    return (React.createElement(\"tr\", null,\n                        React.createElement(\"td\", null,\n                            \" \",\n                            React.createElement(\"img\", { src: d.Logo, style: { width: \"20px\", height: \"20px\" } }),\n                            \" \",\n                            React.createElement(\"input\", { type: \"hidden\", id: \"machineID\", value: d.ID }),\n                            \" \",\n                            React.createElement(\"input\", { type: \"hidden\", id: \"machineDomain\", value: d.Domain })),\n                        React.createElement(\"td\", null, d.Name),\n                        React.createElement(\"td\", null, d.Tag),\n                        React.createElement(\"td\", null,\n                            React.createElement(\"i\", { className: \"fa fa-circle \" + d.State, \"aria-hidden\": \"true\" }, \" \"),\n                            \" \",\n                            d.State,\n                            \" \"),\n                        React.createElement(\"td\", null, d.ExternalInstanceType),\n                        React.createElement(\"td\", null, d.CreatedAt),\n                        React.createElement(\"td\", null, d.UpdatedAt),\n                        React.createElement(\"td\", { className: \"actions\" },\n                            React.createElement(\"i\", { className: \"fa fa-play\", style: { color: \"grey\", padding: \"10px\" }, \"aria-hidden\": \"true\" }),\n                            React.createElement(\"a\", { href: \"#\", onClick: () => opsMachines(\"stop\", d.ID) },\n                                React.createElement(\"i\", { className: \"fa fa-stop\", style: { padding: \"10px\" }, \"aria-hidden\": \"true\" })),\n                            React.createElement(\"a\", { href: \"#\", onClick: () => loaderAlgo(d.Domain, d.ID) },\n                                React.createElement(\"i\", { className: \"fa fa-tasks\", style: { padding: \"10px\" }, \"aria-hidden\": \"true\" })))));\n                }\n                if ((d.State == \"starting\") || (d.State == \"stopping\")) {\n                    return (React.createElement(\"tr\", null,\n                        React.createElement(\"td\", null,\n                            \" \",\n                            React.createElement(\"img\", { src: d.Logo, style: { width: \"20px\", height: \"20px\" } }),\n                            \" \",\n                            React.createElement(\"input\", { type: \"hidden\", id: \"machineID\", value: d.ID }),\n                            \" \",\n                            React.createElement(\"input\", { type: \"hidden\", id: \"machineDomain\", value: d.Domain })),\n                        React.createElement(\"td\", null, d.Name),\n                        React.createElement(\"td\", null, d.Tag),\n                        React.createElement(\"td\", null,\n                            React.createElement(\"i\", { className: \"fa fa-circle \" + d.State, \"aria-hidden\": \"true\" }, \" \"),\n                            \" \",\n                            d.State,\n                            \" \"),\n                        React.createElement(\"td\", null, d.ExternalInstanceType),\n                        React.createElement(\"td\", null, d.CreatedAt),\n                        React.createElement(\"td\", null, d.UpdatedAt),\n                        React.createElement(\"td\", { className: \"actions\" },\n                            React.createElement(\"i\", { className: \"fa fa-play\", style: { color: \"grey\", padding: \"10px\" }, \"aria-hidden\": \"true\" }),\n                            React.createElement(\"i\", { className: \"fa fa-stop\", style: { color: \"grey\", padding: \"10px\" }, \"aria-hidden\": \"true\" }),\n                            React.createElement(\"i\", { className: \"fa fa-tasks\", style: { color: \"grey\", padding: \"10px\" }, \"aria-hidden\": \"true\" }))));\n                }\n            });\n            console.log(rows);\n            const rowsElement = document.getElementById(\"rows\");\n            ReactDOM.render(rows, rowsElement);\n        }\n        try {\n            setInterval(async () => {\n                console.log(\"refreshing !!\");\n                anyNameFunction();\n                console.log(\"refreshed !!\");\n            }, 5000);\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }, []);\n    return (React.createElement(\"div\", { id: \"listing\", className: \"listingStyle\" },\n        React.createElement(\"title\", null, \"AWS\"),\n        React.createElement(\"meta\", { charSet: \"utf-8\" }),\n        React.createElement(\"meta\", { name: \"viewport\", content: \"width=device-width, initial-scale=1\" }),\n        React.createElement(\"link\", { rel: \"stylesheet\", href: \"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\" }),\n        React.createElement(\"link\", { rel: \"stylesheet\", href: \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\" }),\n        React.createElement(\"style\", { type: \"text/css\", dangerouslySetInnerHTML: { __html: \"\\n\\t\\t  /* MOBILE style */\\n\\t@media screen and (max-width: 992px) {\\n\\t    /*\\n\\t     * In Mobile, hide the tabs controls and undo some potential damage done by the accordion\\n\\t     */\\n\\t    .responsive-tabs .nav-tabs,\\n\\t    .responsive-tabs .tab-content .collapse.active:not(.in) {\\n\\t        display: none;\\n\\t    }\\n\\t    .responsive-tabs .tab-content .collapse.in,\\n\\t    .responsive-tabs .tab-content .collapsing {\\n\\t        display: block;\\n\\t    }\\n\\t}\\n\\n\\n\\t/* DESKTOP style */\\n\\t@media screen and (min-width: 991px) {\\n\\t    /*\\n\\t     * In desktop, hide the accordion's controls and undo some potential damage done on the active tab\\n\\t     */\\n\\t    .responsive-tabs .panel-heading {\\n\\t        display: none;\\n\\t    }\\n\\t    .responsive-tabs > .active {\\n\\t        height: auto !important;\\n\\t    }\\n\\t}\\n\\n\\n\\t/* To make it a bit prettier */\\n\\tbody {\\n\\t    padding: 15px;\\n\\t}\\n\\thtml , body {\\n\\t\\theight: 100%;\\n    \\tbackground: #f7f7f7;\\n\\t}\\n\\t.tab-content .panel-heading {\\n\\t    padding: 0;\\n\\t}\\n\\n\\t.tab-content a {\\n\\t    display: block;\\n\\t    margin-bottom: -1px;\\n\\t    padding: 10px 15px;\\n\\t    border: solid #ccc;\\n\\t    border-width: 1px 0;\\n\\t}\\n\\t.table{\\n\\t\\tbackground: #ffffff;\\n\\t\\tbox-shadow: 2px 2px 5px #aaaaaa;\\n\\t}\\n\\t.welcome{\\n\\t\\tpadding: 3px;\\n\\t    background: #ffffff;\\n\\t    box-shadow: 2px 2px 5px #aaaaaa;\\n\\t    border-radius: 5px;\\n\\t    border-left: 10px solid #e15f5f;\\n\\t}\\n\\t.nav-tabs{\\n\\t\\tmargin:1%;\\n\\t}\\n\\t.welcome p{\\n\\t    padding: 1%;\\n\\t    color: #f17790;\\n\\t    margin: 0;\\n\\t}\\n\\t#tab1 h4{\\n\\t\\tmargin: 2% 0;\\n\\t}\\n\\t#tab1 i.fa-compass{\\n\\t\\tcolor: #faa70e;\\n\\t}\\n\\t.fa-file-alt{\\n\\t\\tcolor: #3a8be5;\\n\\t}\\n\\t.actions-ul{\\n\\t\\tlist-style: none;\\n\\t    padding: 5px 25px;\\n\\t    padding: 0px;\\n\\t    box-shadow: 2px 2px 5px #aaaaaa;\\n\\t    width: max-content;\\n\\t}\\n\\t.actions-ul li a{\\n\\t    padding: 5px 25px;\\n\\t}\\n\\t\" } }),\n        React.createElement(\"div\", { className: \"responsive-tabs\" },\n            React.createElement(\"div\", { className: \"logout\" },\n                React.createElement(\"a\", { href: \"#\", onClick: LogOut, className: \"btn btn-info btn-lg\" },\n                    React.createElement(\"span\", { className: \"glyphicon glyphicon-log-out\" }),\n                    \" Log out\")),\n            React.createElement(\"ul\", { className: \"nav nav-tabs\", role: \"tablist\" },\n                React.createElement(\"li\", { role: \"presentation\", className: \"active\" },\n                    React.createElement(\"a\", { href: \"#\", \"aria-controls\": \"tab1\", onClick: () => backtoListing(), role: \"tab\", \"data-toggle\": \"tab\" }, \"Machines\")),\n                React.createElement(\"li\", { role: \"presentation\" },\n                    React.createElement(\"a\", { href: \"#\", \"aria-controls\": \"tab2\", role: \"tab\", \"data-toggle\": \"tab\" }, \"Algo Loader\"))),\n            React.createElement(\"div\", { className: \"welcome\" },\n                React.createElement(\"p\", null, \"Welcome to TigerGraph Cloud!\")),\n            React.createElement(\"div\", { id: \"tabs-content\", className: \"tab-content panel-group\" },\n                React.createElement(\"div\", { className: \"panel-heading\", role: \"tab\", id: \"heading1\" },\n                    React.createElement(\"a\", { href: \"#tab1\", role: \"button\", \"data-toggle\": \"collapse\", \"data-parent\": \"tabs-content\", \"aria-expanded\": \"true\", \"aria-controls\": \"tab1\" }, \"Tab 1\")),\n                React.createElement(\"div\", { id: \"tab1\", role: \"tabpanel\", className: \"tab-pane active panel-collapse collapse in active\", \"aria-labelledby\": \"heading1\" },\n                    React.createElement(\"h4\", null,\n                        \"My solutions \",\n                        React.createElement(\"i\", { className: \"fa fa-compass\", \"aria-hidden\": \"true\" })),\n                    React.createElement(\"table\", { className: \"table\" },\n                        React.createElement(\"thead\", null,\n                            React.createElement(\"tr\", null,\n                                React.createElement(\"th\", { scope: \"col\" }),\n                                React.createElement(\"th\", { scope: \"col\" }, \"Name\"),\n                                React.createElement(\"th\", { scope: \"col\" }, \"Tag\"),\n                                React.createElement(\"th\", { scope: \"col\" }, \"Status\"),\n                                React.createElement(\"th\", { scope: \"col\" }, \"Instance\"),\n                                React.createElement(\"th\", { scope: \"col\" }, \"Creation Date\"),\n                                React.createElement(\"th\", { scope: \"col\" }, \"Last Upadated\"),\n                                React.createElement(\"th\", { scope: \"col\" },\n                                    \"Actions \",\n                                    React.createElement(\"i\", { className: \"fa fa-cog\", \"aria-hidden\": \"true\" })))),\n                        React.createElement(\"tbody\", { id: \"rows\" }))),\n                React.createElement(\"div\", { className: \"panel-heading\", role: \"tab\", id: \"heading2\" },\n                    React.createElement(\"a\", { href: \"#tab2\", className: \"collapsed\", role: \"button\", \"data-toggle\": \"collapse\", \"data-parent\": \"tabs-content\", \"aria-expanded\": \"true\", \"aria-controls\": \"tab2\" }, \"Tab 2\")),\n                React.createElement(\"div\", { id: \"tab2\", role: \"tabpanel\", className: \"tab-pane panel-collapse collapse inactive\", \"aria-labelledby\": \"heading2\" },\n                    React.createElement(\"div\", { className: \"training\" },\n                        React.createElement(\"div\", { className: \"load-block form-group\" },\n                            React.createElement(\"input\", { type: \"text\", name: \"host\", id: \"domaintigergraph\", value: \"\", className: \"form-control\", disabled: true }),\n                            React.createElement(\"input\", { type: \"text\", name: \"mail\", id: \"usernametigergraph\", placeholder: \"tigergraph\", className: \"form-control\" }),\n                            React.createElement(\"input\", { type: \"password\", name: \"password\", id: \"passwordtigergraph\", className: \"form-control\", placeholder: \"Password\" }),\n                            React.createElement(\"a\", { href: \"#\", className: \"btn btn-info btn-lg\", onClick: loginFunction }, \"Login\")),\n                        React.createElement(\"div\", { className: \"form-group\", id: \"AlgoControler\" },\n                            React.createElement(\"h5\", null, \"Graph\"),\n                            React.createElement(\"select\", { id: \"graphs\", className: \"form-control\" },\n                                React.createElement(\"option\", null, \"-\"),\n                                React.createElement(\"option\", null, \"-\")),\n                            React.createElement(\"h5\", null, \"Algorithm\"),\n                            React.createElement(\"select\", { id: \"algos\", className: \"form-control\" },\n                                React.createElement(\"option\", null, \"-\"),\n                                React.createElement(\"option\", null, \"-\")),\n                            React.createElement(\"a\", { href: \"#\", className: \"btn btn-info btn-lg\" }, \"Load\"))),\n                    React.createElement(\"div\", { className: \"live-output\" },\n                        React.createElement(\"p\", null, \"Live output\")))))));\n};\n// Login Component\nconst CounterComponent = () => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    useEffect(() => {\n        if (state.username.trim() && state.password.trim()) {\n            dispatch({\n                type: 'setIsButtonDisabled',\n                payload: false\n            });\n        }\n        else {\n            dispatch({\n                type: 'setIsButtonDisabled',\n                payload: true\n            });\n        }\n    }, [state.username, state.password]);\n    const boxlogin = {\n        padding: \"10px\",\n        backgroundColor: \"#fefefe\",\n        fontFamily: \"Arial\",\n        fontsize: \"10px\"\n    };\n    async function handleLogin() {\n        var formdata = new FormData();\n        formdata.append(\"username\", state.username);\n        formdata.append(\"password\", state.password);\n        const rootLoader = document.getElementById(\"Loader\");\n        rootLoader.classList.add(\"active\");\n        const response = await window.fetch('http://127.0.0.1:5000/login', {\n            method: 'POST',\n            body: formdata,\n            redirect: 'follow'\n        }).then(response => response.json())\n            .then(result => {\n            console.log('Success:', result);\n            return result;\n        })\n            .catch(error => {\n            console.error('Error:', error);\n            dispatch({\n                type: 'loginFailed',\n                payload: 'Incorrect username or password'\n            });\n            console.log(\"Error\");\n        });\n        // handling results\n        if (response[\"Hello\"] == 'tgcloud') {\n            let key = 'token';\n            localStorage.setItem(key, response['token']);\n            rootLoader.classList.remove(\"active\");\n            const rootElement = document.getElementById(\"root\");\n            ReactDOM.render(React.createElement(CloudListingComponent, null), rootElement);\n        }\n        else {\n            dispatch({\n                type: 'loginFailed',\n                payload: 'Incorrect username or password'\n            });\n            console.log(\"Error\");\n            rootLoader.classList.remove(\"active\");\n        }\n    }\n    ;\n    const handleKeyPress = (event) => {\n        if (event.keyCode === 13 || event.which === 13) {\n            state.isButtonDisabled || handleLogin();\n        }\n    };\n    const handleUsernameChange = (event) => {\n        dispatch({\n            type: 'setUsername',\n            payload: event.target.value\n        });\n    };\n    const handlePasswordChange = (event) => {\n        dispatch({\n            type: 'setPassword',\n            payload: event.target.value\n        });\n    };\n    const mystyle = {\n        color: \"white\",\n        backgroundColor: \"DodgerBlue\",\n        fontFamily: \"Arial\"\n    };\n    const mystyleButton = {\n        color: \"white\",\n        padding: \"10px 0\",\n        backgroundColor: \"DodgerBlue\",\n        width: \"100%\",\n        height: \"100%\",\n        fontFamily: \"Arial\"\n    };\n    const rootContainer = {\n        width: \"100%\",\n        height: \"100%\",\n    };\n    return (React.createElement(\"div\", { id: \"root\", style: rootContainer },\n        React.createElement(\"div\", { id: \"Loader\", className: \"Loader\" },\n            React.createElement(\"div\", { className: \"spinner\" })),\n        React.createElement(\"div\", { className: \"container\" },\n            React.createElement(\"div\", { className: \"mat-toolbar mat-primary mat-toolbar-single-row\" }, \"TigerGraph Cloud\"),\n            React.createElement(\"div\", { className: \"container-mini\" },\n                React.createElement(\"form\", { style: boxlogin, noValidate: true, autoComplete: \"off\" },\n                    React.createElement(\"img\", { width: \"50%\", src: \"https://tgcloud.io/assets/img/tgcloud-logo.png\" }),\n                    React.createElement(\"h3\", null, \"TigerGraph Cloud\"),\n                    React.createElement(\"br\", null),\n                    React.createElement(\"div\", { className: \"form-group\" },\n                        React.createElement(\"input\", { id: \"username\", type: \"email\", className: \"texts\", placeholder: \"Enter email\", onChange: handleUsernameChange, onKeyPress: handleKeyPress })),\n                    React.createElement(\"div\", { className: \"form-group\" },\n                        React.createElement(\"input\", { id: \"password\", type: \"password\", className: \"texts\", placeholder: \"Enter password\", onChange: handlePasswordChange, onKeyPress: handleKeyPress })),\n                    React.createElement(\"br\", null),\n                    React.createElement(\"div\", { style: mystyle, className: \"btn btn-primary btn-block\" },\n                        React.createElement(\"button\", { style: mystyleButton, type: \"button\", onClick: handleLogin, disabled: state.isButtonDisabled }, \"Sign in\")),\n                    React.createElement(\"p\", { className: \"forgot-password text-right\" },\n                        \"Forgot \",\n                        React.createElement(\"a\", { href: \"#\" }, \"password?\")))))));\n};\n// Getting the Machines from tgcloud \nasync function getlistmachines(token) {\n    var formdata = new FormData();\n    formdata.append(\"token\", token);\n    const listMachines = await window.fetch('http://127.0.0.1:5000/list', {\n        method: 'POST',\n        body: formdata,\n        redirect: 'follow'\n    }).then(response => response.json())\n        .then(result => {\n        console.log(result);\n        if (result[\"error\"] == 401) {\n            localStorage.removeItem(\"token\");\n            ReactDOM.render(React.createElement(CounterComponent, null));\n        }\n        else {\n            return result;\n        }\n    })\n        .catch(error => {\n        console.log(\"Error\");\n    });\n    return listMachines;\n}\nasync function opsMachines(action, id_machine) {\n    let key = \"token\";\n    const token = localStorage.getItem(key);\n    var formdata = new FormData();\n    formdata.append(\"token\", token);\n    formdata.append(\"id_machine\", id_machine);\n    formdata.append(\"action\", action);\n    const listMachines = await window.fetch('http://127.0.0.1:5000/ops', {\n        method: 'POST',\n        body: formdata,\n        redirect: 'follow'\n    }).then(response => response.json())\n        .then(result => {\n        console.log(result);\n        if (result[\"error\"] == 401) {\n            localStorage.removeItem(\"token\");\n            ReactDOM.render(React.createElement(CounterComponent, null));\n        }\n        else {\n            return result;\n        }\n    })\n        .catch(error => {\n        console.log(\"Error\");\n    });\n    return listMachines;\n}\nexport class CounterWidget extends ReactWidget {\n    constructor() {\n        super();\n        this.addClass('jp-ReactWidget');\n    }\n    render() {\n        let key = 'token';\n        let token = localStorage.getItem(key);\n        // check if token is ok ??? ToDo : \n        if (token != null) {\n            return React.createElement(CloudListingComponent, null);\n        }\n        else {\n            return React.createElement(CounterComponent, null);\n        }\n    }\n}\n"],"sourceRoot":""}